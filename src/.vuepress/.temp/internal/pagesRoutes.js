export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"主页","i":"home"},["/README.md"]],
  ["v-2e3eac9e","/slides.html",{"e":"<!-- markdownlint-disable MD024 MD033 MD051 -->\n<p>@slidestart</p>\n<!-- .slide: data-transition=\"slide\" -->\n<h2> 幻灯片演示</h2>\n<!-- .element: class=\"r-fit-text\" -->\n<p>一个简单的幻灯片演示与各种小贴士。</p>\n<!-- .element: class=\"r-fit-text\" -->\n<blockquote>\n<p>作者 Mr.Hope. 请滚动鼠标滚轮进入下一页</p>\n</blockquote>\n<hr>\n<h2> 标注幻灯片</h2>","y":"s","t":"幻灯片页","i":"person-chalkboard"},[":md"]],
  ["v-b26ff390","/hobbies/",{"e":"<h2> 爱好</h2>\n","y":"a","t":""},["/hobbies/README.md"]],
  ["v-139a9e40","/essays/",{"e":"<h2> 随笔</h2>\n","y":"a","t":"随笔"},["/essays/README.md"]],
  ["v-1ffec989","/essays/difficultThing.html",{"d":1739836800000,"l":"2025年2月18日","c":["随笔"],"g":["认知"],"e":"<p>昨天问deepseek世界上最难的事是什么，它给出的答案很有参考价值和意义。</p>\n<hr>\n<p>关于「世界上最难的事」，不同领域和文化背景下的答案各不相同。以下从人类认知、行为科学和哲学视角展开思考，或许能引发新的理解：</p>\n<h3> 一、认知层面的难题</h3>\n<ol>\n<li>\n<p><strong>认识自己的无知</strong><br>\n苏格拉底说「我唯一知道的是我一无所知」，但现代神经科学发现，人类大脑存在「达克效应」：越是认知水平低的人，越容易高估自己。突破这种自我欺骗的循环需要持续的反直觉训练，就像柏拉图洞穴寓言中挣脱锁链的过程。</p>\n</li>\n<li>\n<p><strong>突破思维惯性</strong><br>\n麻省理工实验证明：当人们习惯用某种方式解谜时，98%的人会忽略更简单的解法。这种「认知冻结」现象在量子物理学家身上同样存在——爱因斯坦晚年拒绝接受量子纠缠理论，称其为「幽灵般的超距作用」。</p>\n</li>\n</ol>","y":"a","t":"世界上最难的事是什么","i":"laptop-code","I":0},[":md"]],
  ["v-5ff4d9ca","/essays/kunhuo.html",{"d":1746230400000,"l":"2025年5月3日","c":["随笔"],"g":["工作"],"e":"<p>想着做一些事，但是快做完了又会觉得做这件事有什么用？</p>\n<p>“技术的价值不在于多先进，而在于多对症”—— 能用Excel宏解决的问题，没必要上神经网络。</p>\n<p>“完成比完美重要100倍”—— 先做出一个60分的可运行方案，再迭代优化，比等待“学透所有知识再动手”更有效。</p>\n<p>二、破局方法：用“最小闭环思维”对抗迷茫\n核心逻辑：把大目标拆解成“能用、可测、快反馈”的小闭环，避免陷入“学了一堆但用不上”的泥潭。</p>\n<ol>\n<li>逆向设计：从工作痛点反推学习内容</li>\n</ol>\n<ul>\n<li>\n<p>错误做法：先学 ChatGPT、Python、机器学习...再找哪里能用。</p>\n</li>\n<li>\n<p>正确做法：</p>\n</li>\n</ul>","y":"a","t":"一些工作上的思考2","i":"laptop-code","I":0},[":md"]],
  ["v-76bfbf5c","/essays/newyear.html",{"d":1738713600000,"l":"2025年2月5日","c":["随笔"],"g":["新年快乐"],"e":"<p>新年假期结束了，但我请了两天假，在大家都开工上班的日子，我享受着假期，算是偷得浮生半日闲。</p>\n<p>自己曾经一直想有一个网站来记录自己想写的东西，之前尝试过类似的博客，但因为缺少前端基础，\npass掉了这种方式。后面在b站看到了一个前后端结合的博客教程，想着后端可以自由做还能顺便学习前端知识，跟着做了并且部署到了线上，在看到过很多好看的博客后也想\n做成他们那样，但受限于前端技术，博客风格一直没什么变化，后面也没什么兴致去维护然后就不了了之了。</p>\n<p>现在重新开始主要是自己从毕业后工作一年多了也积累了一些自己的个人思考，加上自己之前很多技术总结，一直放在那里不想像老房子一直没人住长时间就\n失去了活力一样，同时自己希望能够在新的一年继续不断的学习积累和成长，有一个持续输出的地方。</p>","y":"a","t":"2025","i":"laptop-code","I":0},[":md"]],
  ["v-3a15ef89","/essays/ruheggkkigvh.html",{"d":1741478400000,"l":"2025年3月9日","c":["随笔"],"g":["工作"],"e":"<blockquote>\n<p>慢下来</p>\n</blockquote>\n<h2> 背景</h2>\n<ol>\n<li>\n<p>为啥要有目标？</p>\n<ul>\n<li>→ 没目标：像出门没导航，东逛西逛，最后可能绕回原点，白忙活。</li>\n<li>→ 有目标：像打游戏要通关，知道该往哪走，遇到怪也不怕，心里有底。</li>\n</ul>\n</li>\n<li>\n<p>为啥要知自己真正的能力？</p>\n<ul>\n<li>→ 高估自己：接超难任务，像新手非要单挑Boss，结果被秒，打击信心。</li>\n<li>→ 低估自己：明明能打Boss，却只敢刷小怪，浪费潜力，错过升级机会。</li>\n<li>方法：写日记，每天记下“干成啥了”和“搞砸啥了”，月底翻一翻，就知道自己几斤几两。</li>\n</ul>\n</li>\n</ol>","y":"a","t":"如何能更快的成长","i":"laptop-code","I":0},[":md"]],
  ["v-78915f78","/essays/workthinking.html",{"d":1741478400000,"l":"2025年3月9日","c":["随笔"],"g":["工作"],"e":"<h2> 前言</h2>\n<ul>\n<li>是因为有了这样的想法才有了这样的总结，而不是有这样的总结就会就能这样做</li>\n<li>快乐来源于对自己清晰的认知和对生活主动的掌握？</li>\n</ul>\n<h2> 突破工具人阶段，从开始思考工作的意义和自我的价值开始</h2>\n<h3> 价值：主动自驱 + 拿结果的意识</h3>\n<ul>\n<li>用户价值：是否被真实使用</li>\n<li>业务价值：是否解决实际问题</li>\n<li>自我价值：是否提升核心能力</li>\n</ul>\n<h3> 避免皇帝的新装式需求陷阱</h3>\n<p>如果将个人价值寄托在别人的主观评判上，容易陷入表演型工作的陷阱。</p>","y":"a","t":"一些工作上的思考","i":"laptop-code","I":0},[":md"]],
  ["v-15551100","/tech/",{"y":"a","t":"技术"},["/tech/README.md"]],
  ["v-6d8a8004","/notes/xxx/",{"c":["自我介绍","专业技能","项目经验"],"e":"<ul>\n<li><a href=\"/notes/xxx/day01.html\" target=\"blank\">day01.md</a></li>\n</ul>\n","y":"a","t":"开发日志","i":"laptop-code"},["/notes/xxx/README.md"]],
  ["v-5a8fa2da","/notes/xxx/day01.html",{"c":["开发笔记","学习记录"],"e":"<h2> 任务</h2>\n<ul>\n<li>[x] 环境配置</li>\n<li>[x] 搭建项目结构</li>\n<li>[x] 跑通广播模式 RPC 过程调用</li>\n</ul>\n<h2> 学习过程</h2>\n<ol>\n<li>\n<p>项目整体了解</p>\n<p>通过对第一节文档的阅读，了解整个项目的生命周期、所需要的技术以及代码提交规范</p>\n</li>\n<li>\n<p>搭建项目结构，理解每个模块应该干什么</p>\n<table>\n<thead>\n<tr>\n<th>模块</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lottery</td>\n<td>总项目，用来管理整个项目的依赖</td>\n</tr>\n<tr>\n<td>lottery-application</td>\n<td>应用层，为用户接口层提供各种应用数据展现支持服务</td>\n</tr>\n<tr>\n<td>lottery-common</td>\n<td>定义通用数据，比如统一响应数据、常量、异常、枚举等</td>\n</tr>\n<tr>\n<td>lottery-domain</td>\n<td>领域层，核心业务逻辑</td>\n</tr>\n<tr>\n<td>lottery-infrastructure</td>\n<td>基础层，为其他各层提供通用技术能力，包括数据库、Redis、ES 等</td>\n</tr>\n<tr>\n<td>lottery-interfaces</td>\n<td>用户接口层，存放与前端交互、展现数据相关的代码</td>\n</tr>\n<tr>\n<td>lottery-rpc</td>\n<td>RPC 接口文件</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注：因为并不了解 DDD 架构，所以每个模块目前只有模糊的概念，具体的东西在后续代码编写中进行体会</p>\n</blockquote>\n</li>\n<li>\n<p>阅读 <a href=\"https://gitcode.net/KnowledgePlanet/Lottery/-/tree/210801_xfg_initProject\" target=\"_blank\" rel=\"noopener noreferrer\">210801_xfg_initProject</a> 分支上的 POM 文件</p>\n<p>通过对 POM 文件的阅读，更加清楚的了解这个项目所使用的技术，并且通过阅读发现项目没有添加 Lombok 来简化开发，具体项目开发是否使用这个插件我不知道，但是我想用，因为我<strong>懒</strong>，所以就给加上了😄</p>\n</li>\n<li>\n<p>跑通 RPC</p>\n<ol>\n<li>定义 response 状态码枚举供通用返回对象 Result 进行使用</li>\n<li>定义通用返回对象 Result 类</li>\n<li>定义 activity 表的持久化对象</li>\n<li>定义 activity 表的 Mapper 接口</li>\n<li>定义 mybatis 配置文件</li>\n<li>定义 activity 表的 mapper.xml 文件</li>\n<li>定义 rpc 的数据传输对象(DTO) ActivityDto</li>\n<li>定义 rpc 的 请求对象 ActivityReq</li>\n<li>定义 rpc 的响应对象 ActivityRes</li>\n<li>定义 rpc 接口 IActivityBooth</li>\n<li>实现 IActivityBooth 接口</li>\n<li>编写启动类</li>\n<li>编写配置文件 application.yml</li>\n<li>编写测试模块 <strong>这个我是直接加在工程里面的，教程是单独开了一个项目</strong></li>\n</ol>\n</li>\n</ol>","y":"a","t":"Day01","i":"laptop-code","I":0},[":md"]],
  ["v-5c447b79","/notes/xxx/day02.html",{"c":["开发笔记","学习记录"],"e":"<h2> 任务</h2>\n<ul>\n<li>[x] 表设计</li>\n<li>[x] 抽奖领域模块开发</li>\n</ul>\n<h2> 学习过程</h2>\n<ol>\n<li>查询分库分表相关知识点，了解到垂直和水平分库分表，主要是为了解决数据量过大导致 MySQL 查询慢、单体容量过大问题</li>\n<li>开始写代码\n<ol>\n<li>编写基础的持久化对象 (PO)</li>\n<li>编写 Mapper 接口</li>\n<li>编写对应的 Mapper.xml</li>\n<li>设计抽奖策略顶级接口，主要是入参出参，如何封装，要封装哪些数据</li>\n<li>编写顶级接口的基础实现，实现里面公用的方法，比如把初始化方法、哈希计算的方法以及判断是否初始化完成</li>\n<li>编写两种算法的实现</li>\n<li>算法单元测试</li>\n</ol>\n</li>\n</ol>","y":"a","t":"Day02","i":"laptop-code","I":0},[":md"]],
  ["v-5df95418","/notes/xxx/day03.html",{"c":["开发笔记","学习记录"],"e":"<h2> day03</h2>\n<h3> 任务</h3>\n<ul>\n<li>[x] 模板模式处理抽奖流程</li>\n</ul>\n<h3> 学习过程</h3>\n<ol>\n<li>\n<p>因为之前没学过设计模式，先学一学模板模式，用到一种学一种，哈哈哈</p>\n</li>\n<li>\n<p>先看一下整个抽奖流程</p>\n<figure><figcaption>抽奖过程</figcaption></figure>\n</li>\n<li>\n<p>了解了抽奖流程之后就开始写代码</p>\n<ol>\n<li>\n<p>先写对应的 dao 层</p>\n<ol>\n<li>要查策略吧？写个策略的 Mapper</li>\n<li>要查策略详情吧？写个策略详情的 Mapper</li>\n<li>要查奖品吧？要减奖品库存吧？要查没库存的奖品吧？写个奖品的 Mapper</li>\n</ol>\n</li>\n<li>\n<p>然后实现 repository 层</p>\n<p>这里主要是调 Mapper 将结果进行聚合封装</p>\n</li>\n<li>\n<p>使用模板模式设计抽奖过程代码</p>\n<ol>\n<li>顶层接口规定抽奖的入参出参</li>\n<li>加一层 Config 把抽奖策略进行统一录入</li>\n<li>配置完成后需要调用基础服务比如 repository 层，所以加一层基础支持</li>\n<li>然后来一个抽象类，在这里实现接口的抽奖，抽奖接口里面写抽奖的流程，然后具体的方法交给子类实现</li>\n<li>实现抽象类</li>\n</ol>\n</li>\n<li>\n<p>测试</p>\n</li>\n</ol>\n</li>\n</ol>","y":"a","t":"Day03","i":"laptop-code","I":0},[":md"]],
  ["v-5fae2cb7","/notes/xxx/day04.html",{"c":["开发笔记","学习记录"],"e":"<h3> 任务</h3>\n<ul>\n<li>[x] 简单工厂搭建发奖领域</li>\n</ul>\n<h3> 学习过程</h3>\n<ol>\n<li>\n<p>表结构变了，先导入 SQL，然后该对应的 PO 类，然后改一下 Mapper 文件</p>\n</li>\n<li>\n<p>先把包结构建好</p>\n<ol>\n<li>新建一个领域包，负责发奖</li>\n<li>领域包内建三个子包，model 实体封装包、repository 提供仓储服务、service 提供具体的服务（重点内容）</li>\n</ol>\n</li>\n<li>\n<p>看一下代码的继承关系</p>\n</li>\n<li>\n<p>debug 看一下代码执行流程，了解其中的调用关系</p>\n<ol>\n<li>先执行抽奖，返回抽奖结果</li>\n<li>对抽奖结果进行判断，如果是未中奖，直接返回</li>\n<li>中奖了就保存用户信息以及订单信息</li>\n<li>根据中奖结果中的奖品类型获取对应的服务</li>\n<li>然后把第三步保存的用户信息以及订单信息传进去，做一个发奖的操作</li>\n<li>然后返回发奖结果</li>\n</ol>\n</li>\n</ol>","y":"a","t":"Day04","i":"laptop-code","I":0},[":md"]],
  ["v-61630556","/notes/xxx/day05.html",{"c":["开发笔记","学习记录"],"e":"<h2> 任务</h2>\n<ul>\n<li>[x] 活动领域的配置与状态</li>\n</ul>\n<h2> 学习过程</h2>\n<ol>\n<li>包结构变化，调整对应的包</li>\n<li>了解活动创建的整个流程，然后将流程进行编排(其实就是落库的步骤呗)，写对应的 repository 层代码\n<ol>\n<li>首先明确要做哪些操作\n<ol>\n<li>添加活动</li>\n<li>添加奖品</li>\n<li>添加活动配置</li>\n<li>添加策略</li>\n<li>添加策略明细</li>\n</ol>\n</li>\n<li>编写对应的 repository 接口和实现类</li>\n<li></li>\n</ol>\n</li>\n<li>debug 了解状态模式如何进行的状态判断(感觉不用刻意去学这个设计模式，通过对项目的学习，从而达到状态模式的学习，<strong>后期进行设计模式的统一学习</strong>）\n<ol>\n<li>首先定义一个状态处理的接口，入参统一是活动ID和当前状态</li>\n<li>定义一个活动状态抽象类，这个抽象类的子类用来判断某种状态是否可以流转</li>\n<li>编写抽象类的实现，里面定义是否可以流转</li>\n<li>编写状态配置类，把每一种活动状态抽象类的实现注入进去并放入 Map 中，供状态处理服务使用</li>\n<li>编写状态处理接口的实现类\n<ol>\n<li>先从状态配置中获取当前状态所对应的活动状态流转实现类</li>\n<li>然后实现类调用方法，通过方法的返回值来确定是否能进行操作\n<ol>\n<li>如果能进行变更的，先进行落库操作，然后根据 MyBatis 返回值返回对应信息</li>\n<li>如果不能进行变更的，直接返回对应的错误信息</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>","y":"a","t":"Day05","i":"laptop-code","I":0},[":md"]],
  ["v-6317ddf5","/notes/xxx/day06.html",{"c":["开发笔记","学习记录"],"e":"<h3> 任务</h3>\n<ul>\n<li>[x] ID 生成策略开发</li>\n</ul>\n<h3> 学习过程</h3>\n<ol>\n<li>\n<p>先看视频了解用到了啥</p>\n</li>\n<li>\n<p>看小傅哥策略模式的<a href=\"https://mp.weixin.qq.com/s/zOFLtSFVrYEyTuihzwgKYw\" target=\"_blank\" rel=\"noopener noreferrer\">文章</a></p>\n</li>\n<li>\n<p>看代码结构</p>\n<ol>\n<li>定义一个接口，用来生成 id</li>\n<li>实现接口，实现不同的 id 生成算法</li>\n<li>定义一个上下文对象，包装各种 id 生成算法，然后放到 Spring 容器中供其他类注入使用</li>\n</ol>\n<p>今天的代码比较简单，主要就是涉及策略模式的使用，这里的上下文对象和之前的 config 类似，都是把写好的实现类进行包装，统一放到一个容器内，然后其他类通过这个容器，配合枚举拿到对应的实现类进行调用</p>\n</li>\n<li>\n<p>实操</p>\n</li>\n</ol>","y":"a","t":"Day06","i":"laptop-code","I":0},[":md"]],
  ["v-6f252d2e","/notes/xxx/day07~day08.html",{"c":["开发笔记","学习记录"],"e":"<h3> 任务</h3>\n<ul>\n<li>[x] 分库分表组件</li>\n</ul>\n<h3> 遇到的问题</h3>\n<p>问题就不说了，这一章节全是问题 T.T，基础不牢，地动山摇啊！！！</p>\n<h3> 总结</h3>\n<p>首先建立一个大局观，要实现一个分库分表组件，那么先要学会如何编写 SpringBoot Starter，然后这个 Starter 需要实现的功能是分库分表，那么一定是有多个数据源，这个数据源从项目的 yml 配置文件传进来，然后就要实现多数据源的切换，然后分表操作就是要修改 SQL 的表名，所以需要做的事情大概是如下：</p>\n<ol>\n<li>读取数据源信息</li>\n<li>动态修改数据源</li>\n<li>动态修改 SQL</li>\n</ol>","y":"a","t":"Day07 ~ Day08","i":"laptop-code","I":0},[":md"]],
  ["v-b4702396","/notes/xxx/day09~day10.html",{"c":["开发笔记","学习记录"],"e":"<h3> 任务</h3>\n<ul>\n<li>[x] 在应用层编排抽奖过程</li>\n</ul>\n<h3> 总结</h3>\n<p>有了前面的模板模式的基础，这一章节相对来说比较容易，自己实现的时候也没有什么大问题，大体流程就是写接口，编排流程，然后写实现类，然后写 Mapper，至于为什么花了两三天，这就不得不说上一章的分库分表了，没写过 SpringBoot Starter，没写过 MyBatis 插件，对 AOP 没有深刻的理解，纯硬啃下来的，但是记不太劳，所以晚上睡不着觉，总感觉缺点什么东西，就花了两天干了如下几件事：</p>\n<ol>\n<li>\n<p>新建一个空的 SpringBoot 项目，从 <code>SpringApplication.run()</code> 方法开始 debug，一步一步看，在这一个过程中主要学到了如下几点：</p>\n<ul>\n<li>一个 SpringBoot 项目是如何初始化的，在哪里创建的容器等等</li>\n<li>如何加载第三方 Starter 的</li>\n<li><s>在哪里打印的Banner 以及如何设置</s> 这个不是重点，哈哈哈，但是挺好玩的</li>\n<li>还有 <code>ApplicationRunner</code> 和 <code>CommandLineRunner</code></li>\n<li>还有异常报告器 <code>exceptionReporters</code></li>\n<li>还有几个关于上下文环境的重要方法 <code>prepareContext()</code> 、<code>refreshContext()</code>、<code>afterRefresh()</code></li>\n</ul>\n<p>明白了 SpringBoot 应用初始化流程就知道所写的分录分表路由 starter 是在哪个阶段进行数据源设置以及为什么要在 <code>AutoConfig</code> 类下进行 Bean 的注入了</p>\n</li>\n<li>\n<p>看了看 MyBatis 插件相关的文档，大致了解了一个 MyBatis 插件如何编写，看了这个以后看 MyBatis-Plus 源码的时候可能会轻松一点</p>\n</li>\n<li>\n<p>复习了一下 AOP，注解的属性有哪些以及该怎么写都有点忘了</p>\n</li>\n<li>\n<p>在这个 debug 的过程中其实画了一些图，但是因为没有 OSS，所以图片不太好展示，所以使用 vuepress + github pages + github actions 搭建了一个博客，后面有空了会把看源码的过程发上去</p>\n</li>\n</ol>","y":"a","t":"Day09 ~ Day10","i":"laptop-code","I":0},[":md"]],
  ["v-e11443ca","/notes/xxx/day11.html",{"c":["开发笔记","学习记录"],"e":"<h3> 任务</h3>\n<ul>\n<li>[x] 在应用层编排抽奖过程</li>\n</ul>\n<h3> 总结</h3>\n<p>今天的内容比较简单，最主要的问题就是表改了，然后花了很多时间去改对应的 PO 以及 SQL，然后今天第一次开发 application 层，感觉就是把 domain 层各个领域进行组装，然后形成一个又一个的流程，在这里面会使用 MQ 把流程进行切片，之后写门面接口应该就是调 application 层里面各个流程了，这样对于 Controller 层感觉挺好的，只需要简单的封装一下前端传进来的参数，然后调用 application 层执行各个流程就可以了</p>\n<p>感觉今天最大的收获就在于学到了在开发的过程中要把整个流程切分一下，分成一块一块的，然后用 MQ 进行后续的操作，用户不需要感知到这一切，他只需要点进去，然后执行一个小的片段，然后剩下的操作可以使用 MQ 来慢慢操作，而不是之前那样直接单线程一个流程写完，又臭又长，返回得还慢，用户体验很不好，学到了流程切片，今天不亏，哈哈哈哈，这个东西还是很有用的</p>","y":"a","t":"Day011","i":"laptop-code","I":0},[":md"]],
  ["v-ddaa928c","/notes/xxx/day12.html",{"c":["开发笔记","学习记录"],"e":"<h3> 任务</h3>\n<ul>\n<li>[x] 规则引擎量化人群参与活动</li>\n</ul>\n<h2> 总结</h2>\n<p>首先先去了解了一下组合模式和决策树，然后看了看数据库，其实就是把一个类似于二叉树的结构存到了数据库里，分别对应了三个东西，一个表用来保存决策树的树根信息，然后一个表用来保存树上的所有节点的信息，然后一个表用来存决策树的连接信息，我们可以通过树根的 ID 拿到所有相关的连线信息以及所有相关的节点信息，明白了数据库相关的东西之后屡屡代码结构</p>\n<p>什么是组合模式呢？先看看维基百科对组合模式的定义，然后直接看代码，给我的第一感觉就是把每一个 if-else 的条件抽取出来，然后变成一个又一个的 filter，然后在规则引擎中进行使用，首先把一个个 filter 包装到 map 中，供子类使用</p>","y":"a","t":"Day012","i":"laptop-code","I":0},[":md"]],
  ["v-18c89c6a","/tech/algorithms/",{"e":"<h2> algorithms</h2>\n<p>算法</p>\n","y":"a","t":"算法"},["/tech/algorithms/README.md"]],
  ["v-ceac2598","/tech/algorithms/arrays.html",{"d":1747526400000,"l":"2025年5月18日","c":["数据结构"],"g":["数组"],"e":"<blockquote>\n<p>分享你在学习什么，遇到什么问题，怎么解决的，学到了哪些。</p>\n</blockquote>\n<p>数组：\n初始化阶段，如果没有指定大小，是给个空的，第一次add的时候初始化成容量为10，然后往里装到10了扩容1.5倍；\n如果初始化阶段指定大小了，是给指定大小的数组，然后满了以后再按1.5倍扩容</p>\n<p>删除元素，把删除元素的后面所有元素复制到被删除元素作为开始的位置，\nSystem.arraycopy(elementData, index + 1, elementData, index, numMoved);\n参数含义：旧数组、旧数组起始位置、新数组、新数组起始位置，要copy的元素个数</p>","y":"a","t":"数组","i":"laptop-code","I":0},[":md"]],
  ["v-77f51b20","/tech/algorithms/hash.html",{"d":1748131200000,"l":"2025年5月25日","c":["数据结构"],"g":["hash"],"e":"<h2> 介绍一下散列表</h2>\n<h2> 为什么使用散列表</h2>\n<p>理想情况下实现 O(1) 时间复杂度的查找、插入、删除操作</p>\n<h2> 拉链寻址和开放寻址的区别</h2>\n<ul>\n<li>存储结构\t数组+链表/树\t单一数组</li>\n<li>冲突解决方式\t同桶内链式存储\t探测下一个空槽（线性/平方探测等）</li>\n<li>空间效率\t需要额外指针空间\t无额外指针，内存紧凑</li>\n<li>性能稳定性\t高冲突时性能下降平缓\t高负载因子时性能急剧下降</li>\n<li>删除操作\t直接链表删除\t需标记为\"墓碑\"</li>\n<li>典型实现\tJava HashMap\tThreadLocalMap</li>\n</ul>","y":"a","t":"散列表","i":"laptop-code","I":0},[":md"]],
  ["v-492cf052","/tech/algorithms/linkedlist.html",{"d":1742083200000,"l":"2025年3月16日","c":["数据结构"],"g":["链表"],"e":"<blockquote>\n<p>分享你在学习什么，遇到什么问题，怎么解决的，学到了哪些。</p>\n</blockquote>\n<h2> 链表类型</h2>\n<p>单向链表、双向链表、循环链表</p>\n<h2> 实现LinkedList</h2>\n<h3> 创建项目</h3>\n<ul>\n<li>创建项目：java-algorithms，<a href=\"https://github.com/fieldf/java-algorithms\" target=\"_blank\" rel=\"noopener noreferrer\">项目地址</a></li>\n<li>创建模块：data-structures</li>\n<li>创建包：linked_list</li>\n</ul>","y":"a","t":"链表数据结构","i":"laptop-code","I":0},[":md"]],
  ["v-0ea05a73","/tech/algorithms/queue.html",{"d":1747526400000,"l":"2025年5月18日","c":["数据结构"],"g":["数组"],"e":"<ul>\n<li>\n<p>实现队列的方式？</p>\n<ul>\n<li>数组和链表都可以实现队列，java中链表实现的队列：LinkedList；数组实现的队列：ArrayDeque</li>\n</ul>\n</li>\n<li>\n<p>阻塞队列和延迟队列都是干什么的？</p>\n<ul>\n<li>→ 阻塞队列控流量，仓库满空要等待；【await() 让线程等，signal() 叫醒线程】</li>\n<li>→ 延迟队列管时间，任务到点才出来！</li>\n</ul>\n</li>\n<li>\n<p>什么是阻塞？</p>\n<ul>\n<li>阻塞的是线程被阻塞住，挂起状态等待返回，非阻塞是立即返回，一般需要轮询浪费cpu</li>\n</ul>\n</li>\n<li>\n<p>单端队列和双端队列，分别对应的实现类是哪个？</p>\n<ul>\n<li>单端队列：LinkedList、ArrayDeque、PriorityQueue</li>\n<li>双端队列：ArrayDeque、LinkedList</li>\n</ul>\n</li>\n<li>\n<p>简述延迟队列/优先队列的实现方式</p>\n<ul>\n<li>延迟队列\n<ul>\n<li>核心结构：优先级堆（PriorityQueue） + 可重入锁（ReentrantLock）</li>\n<li>排序规则：按元素到期时间升序排列</li>\n<li>阻塞机制：Condition.await() 和 signal()</li>\n</ul>\n</li>\n<li>优先队列\n<ul>\n<li>核心结构：二叉堆（数组实现）</li>\n<li>排序规则：可自定义比较器（默认自然顺序）</li>\n<li>操作复杂度：\n<ul>\n<li>插入：O(log n)（上浮）</li>\n<li>取出：O(log n)（下沉）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>二叉堆插入/弹出元素的过程</p>\n<ul>\n<li>插入</li>\n</ul>\n<ol>\n<li>将新元素放入数组末尾</li>\n<li>与其父节点比较：\n<ul>\n<li>若比父节点更优先（小顶堆则更小），交换位置</li>\n</ul>\n</li>\n<li>重复步骤2，直到满足堆条件或到达根节点</li>\n</ol>\n<ul>\n<li>弹出</li>\n</ul>\n<ol>\n<li>取出根节点（堆顶元素）</li>\n<li>将数组末尾元素移到根位置</li>\n<li>将新根与其子节点比较：\n<ul>\n<li>选择优先级更高的子节点（小顶堆选更小的）</li>\n<li>若子节点优先级更高，交换位置</li>\n</ul>\n</li>\n<li>重复步骤3，直到满足堆条件或到达叶子节点</li>\n</ol>\n</li>\n<li>\n<p>延迟队列的使用场景</p>\n<ul>\n<li>定时任务调度\t按指定时间触发任务\t30分钟后关闭未支付订单</li>\n<li>缓存过期清理\t自动清理过期缓存\tRedis的Key过期机制</li>\n<li>重试机制\t失败任务延迟重试\t消息发送失败后延迟5秒重试</li>\n<li>流量整形\t控制请求处理速率\t限制每秒最多处理100个请求</li>\n<li>会话管理\t用户会话超时处理\t用户15分钟无操作自动退出登录</li>\n</ul>\n</li>\n<li>\n<p>延迟队列为什么添加信号量</p>\n<ul>\n<li>核心原因：避免无效轮询，精准唤醒\n<ul>\n<li>Condition.await()：\n<ul>\n<li>阻塞，释放锁并挂起线程，零CPU消耗</li>\n<li>进入条件等待队列</li>\n</ul>\n</li>\n<li>Condition.signal()：\n<ul>\n<li>当有新元素入队且该元素是当前最早到期的时触发</li>\n<li>将等待最久的线程从条件队列移到锁的同步队列</li>\n</ul>\n</li>\n<li>想象你叫外卖，但餐还没做好。你有两种选择： 一直打电话问：“好了没？好了没？”（这就是轮询，费嘴皮子还费手机电量）\n告诉商家：“做好后打我电话，我先眯会儿。”（这就是信号量，省力又高效）\n为什么加信号量？\n不叫醒你：没人通知的话，你只能干等，浪费时间精力（CPU空转）。\n叫醒你：餐好了立刻通知你，立马开吃不耽误（线程及时响应）。\n代码里加信号量（比如 available.signal()）的作用就是：\n“别瞎忙了！有活干了，快起来干活！” —— 让等待的线程及时知道条件满足，不用白等。</li>\n<li>消费者获取到锁但是发现某一种状态达不到（获取队头元素的时候还没有），进入await等待，会释放锁；当这种状态能够达到满足时（有元素进入的时候），signal唤醒消费者的线程，被唤醒的消费者线程能够继续执行</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","y":"a","t":"队列","i":"laptop-code","I":0},[":md"]],
  ["v-3b016f94","/tech/algorithms/trie.html",{"d":1748649600000,"l":"2025年5月31日","c":["数据结构"],"g":["字典树"],"e":"<h2> 简述字典树的数据结构</h2>\n<p>前缀树，高效的存储或检索字符串集合，核心思想是字符串的公共前缀节省存储空间并提高查询效率。</p>\n<h2> 叙述你怎么来实现一个字典树</h2>\n<ul>\n<li>字典树：Trie\n<ul>\n<li>TrieNode tree = new TrieNode();</li>\n</ul>\n</li>\n<li>节点：TrieNode\n<ul>\n<li>slot：TrieNode[] slot = new TrieNode[26]</li>\n<li>c：字符</li>\n<li>isWord: 是否是一个单词</li>\n</ul>\n</li>\n<li>方法：\n<ul>\n<li>insert：插入</li>\n<li>search：前缀精准匹配，递归调用获取所有该前缀的单词</li>\n</ul>\n</li>\n</ul>","y":"a","t":"字典树","i":"laptop-code","I":0},[":md"]],
  ["v-8d8006a8","/tech/basic/network.html",{"d":1676160000000,"l":"2023年2月12日","c":["计算机网络","计算机基础"],"g":["OSI七层模型","TCP/IP","HTTP/HTTPS"],"e":"<h1> ·七层模型</h1>\n<p>是ISO国家标准化组织制定的用于计算机通信系统间互联的体系。OSI七层模型包含一些抽象的概念和术语，也包括一些具体的协议。</p>\n<p>应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。</p>\n<h2> 应用层</h2>\n<ol>\n<li>应用层是构建的具体应用。</li>\n<li>我们应用软件都是在应用层实现的，是和用户的接口。</li>\n<li>应用层把数据传递给下一层TCP层。</li>\n<li>协议有HTTP,DNS,HTTPS,FTP文件上传下载,SMTP,POP3,TELNET,DHCP,TFTP。</li>\n</ol>\n<p><em></em></p>","y":"a","t":"计算机网络","i":"laptop-code","I":0},[":md"]],
  ["v-241ad394","/tech/basic/os.html",{"d":1676160000000,"l":"2023年2月12日","c":["操作系统","计算机基础"],"g":["内存管理","进程与线程","IO模型","CPU","零拷贝"],"e":"<h1> 内存</h1>\n<h2> 虚拟内存</h2>\n<p>虚拟内存，就是虚拟出来的内存，可以把外存当做内存来使用，是为了解决程序运行时内存不足的问题。</p>\n<p>每个程序拥有地址空间，也就是虚拟内存地址。在编译期间，为变量一个虚拟地址。虚拟地址空间被分成多个固定大小的。物理空间也就是内存空间，被分成大小相同的页。在运行期间，内存管理单元MMU，用于获取虚拟地址对应的物理地址，是通过内存中的获取虚拟地址对应的实际内存物理地址，但是这个时候如果变量还物理地址，MMU就会它对应的物理地址是什么，此时发生了。需要为它在内存上分配一块物理地址，并将该地址供以后使用。发生缺页中断时，若物理内存空间，需要将物理空间中的一部分数据和磁盘对换来腾出空间，称为页面置换，根据换出页面的不同有不同的页面置换算法。</p>","y":"a","t":"操作系统","i":"laptop-code","I":0},[":md"]],
  ["v-7a7f98c2","/notes/chatgpt/day01.html",{"d":1742083200000,"l":"2025年3月16日","c":["学习笔记","chatgpt"],"g":["dev-ops"],"e":"<h2> 1.项目初始化</h2>\n<p>创建dev-ops项目初始化并推送到<a href=\"https://gitcode.com/Field_ctxy/dev-ops\" target=\"_blank\" rel=\"noopener noreferrer\">远程仓库</a></p>\n<h2> 2.云服务器安装环境（docker &amp; portainer）</h2>\n<ol>\n<li>购买云服务器</li>\n<li>termius连接</li>\n<li>更新yum源</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">sudo</span> yum update\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","t":"Day01-chatgpt项目dev-ops","i":"laptop-code","I":0},[":md"]],
  ["v-7715e784","/notes/chatgpt/day02.html",{"d":1742083200000,"l":"2025年3月16日","c":["学习笔记","chatgpt"],"g":["dev-ops","nginx"],"e":"<h2> 创建一个springboot工程，提供鉴权和鉴权成功访问接口</h2>\n<p>工程code：<a href=\"https://gitcode.com/Field_ctxy/chatgpt-api\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitcode.com/Field_ctxy/chatgpt-api</a></p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/verify\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"验证 token：{}\"</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">OK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BAD_REQUEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/success\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"test success by xfg\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day02-nginx auth鉴权","i":"laptop-code","I":0},[":md"]],
  ["v-73ac3646","/notes/chatgpt/day03.html",{"d":1742083200000,"l":"2025年3月16日","c":["学习笔记","chatgpt"],"g":["dev-ops"],"e":"<p><strong>思路</strong>：</p>\n<ol>\n<li>先登陆获取token(shiro登陆授权发放token)</li>\n<li>通过token鉴权访问使用openai接口</li>\n</ol>\n<p><strong>工程结构</strong></p>\n<ul>\n<li>interfaces: <strong>ApiAccessController</strong></li>\n<li>application: <strong>IApiAccessService</strong></li>\n<li>domain:\n<ul>\n<li>access</li>\n<li>security\n<ul>\n<li>model.vo: <strong>JwtToken</strong></li>\n<li>service:\n<ul>\n<li>realm: <strong>JwtRealm</strong></li>\n<li><strong>JwtFilter</strong></li>\n<li><strong>JwtUtil</strong></li>\n<li><strong>ShiroConfig</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>infrastructure\n<ul>\n<li>common: <strong>Constants</strong></li>\n</ul>\n</li>\n</ul>","y":"a","t":"Day03-token验证鉴权","i":"laptop-code","I":0},[":md"]],
  ["v-265fdf56","/notes/bigmarket/day01.html",{"d":1738800000000,"l":"2025年2月6日","c":["学习笔记","大营销"],"g":["docker"],"e":"<h1> 环境</h1>\n<h2> java环境</h2>\n<ol>\n<li>\n<p>下载安装java\n<a href=\"https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html\" target=\"_blank\" rel=\"noopener noreferrer\">Oracle官网java8</a></p>\n</li>\n<li>\n<p>配置环境变量</p>\n</li>\n</ol>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">vim</span> ~/.bash_profile\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","t":"Day01-环境配置&项目初始化","i":"laptop-code","I":0},[":md"]],
  ["v-2814b7f5","/notes/bigmarket/day02.html",{"d":1738800000000,"l":"2025年2月6日","c":["学习笔记","大营销"],"g":["数据库"],"e":"<h2> 数据库与库表设计</h2>\n<p>数据库操作软件：Sequel ace</p>\n<p>步骤：</p>\n<ul>\n<li>创建数据库</li>\n<li>创建表</li>\n<li>创建表结构</li>\n<li>填充数据</li>\n</ul>\n<p>docker执行sql：</p>\n<ul>\n<li>库表需要先清理下再重新执行sql才生效</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">docker-compose</span> <span class=\"token parameter variable\">-f</span> docker-compose-environment.yml down <span class=\"token parameter variable\">-v</span>\n<span class=\"token function\">docker-compose</span> <span class=\"token parameter variable\">-f</span> docker-compose-environment.yml up <span class=\"token parameter variable\">-d</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day02-库表设计","i":"laptop-code","I":0},[":md"]],
  ["v-29c99094","/notes/bigmarket/day03.html",{"d":1739059200000,"l":"2025年2月9日","c":["学习笔记","大营销"],"g":["抽奖策略","redis"],"e":"<p>运营配置好一个抽奖策略以后，装配这个抽奖策略按不同概率实现奖品抽奖的功能。</p>\n<h2> redis配置与测试</h2>\n<ul>\n<li>创建分支：250209-txy-strategy-armory</li>\n<li>修改dev-ops目录结构：\n<ul>\n<li>environment/mysql</li>\n<li>environment/redis</li>\n<li>environment/docker-compose.yml</li>\n</ul>\n</li>\n<li>redis.conf</li>\n</ul>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token builtin class-name\">bind</span> <span class=\"token number\">0.0</span>.0.0\nport <span class=\"token number\">6379</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day03-装配抽奖策略","i":"laptop-code","I":0},[":md"]],
  ["v-2b7e6933","/notes/bigmarket/day04.html",{"d":1739059200000,"l":"2025年2月9日","c":["学习笔记","大营销"],"g":["抽奖策略"],"e":"<p>能够实现按照不同积分解锁不同的抽奖奖品-策略的权重规则配置。</p>\n<p>创建分支：250209-txy-strategy-armory-rule-weight</p>\n<p>重构：</p>\n<ul>\n<li>在/domain/service/armory/包下创建接口IStrategyDispatch：策略抽奖调度，把IStrategyArmory类的抽奖方法移过来，</li>\n<li>实现类实现两个接口：IStrategyArmory，IStrategyDispatch</li>\n<li>原来装配策略方法拆分成两个模块，1.查询策略奖品配置，2.装配抽奖策略（便于复用）</li>\n</ul>","y":"a","t":"Day04-抽奖权重策略装配","i":"laptop-code","I":0},[":md"]],
  ["v-2d3341d2","/notes/bigmarket/day05.html",{"d":1739059200000,"l":"2025年2月9日","c":["学习笔记","大营销"],"g":["抽奖策略","设计模式"],"e":"<h2> 概述</h2>\n<ul>\n<li><strong>使用【模板模式】定义抽奖方法模板</strong>：固定步骤，调用前置规则过滤的抽象方法（由具体实现去实现具体的过滤规则），\n根据规则过滤结果（即黑名单/权重过滤结果）判断执行抽奖（普通抽奖/黑名单返回固定奖品/权重抽奖）。</li>\n<li><strong>在具体实现中由【策略模式】实现规则过滤</strong>：根据规则过滤的标识key，从工厂中获取策略接口【工厂模式】，根据不同策略调用规则过滤的具体实现。</li>\n</ul>\n<h2> 步骤</h2>\n<p>创建分支：250210-txy-raffle-design</p>\n<ol>\n<li>模板模式 🧩\n实现：</li>\n</ol>","y":"a","t":"Day05-抽奖规则过滤(设计模式)","i":"laptop-code","I":0},[":md"]],
  ["v-2ee81a71","/notes/bigmarket/day06.html",{"d":1739577600000,"l":"2025年2月15日","c":["学习笔记","大营销"],"g":["抽奖策略","设计模式"],"e":"<h2> 做了什么</h2>\n<ul>\n<li>实现逻辑：实现<strong>抽奖中</strong>的规则过滤\n<ul>\n<li>抽奖模板：新增抽奖中的过滤动作</li>\n<li>新增抽奖中策略：RULE_LOCK抽奖次数到达指定次数后可解锁抽奖奖品</li>\n</ul>\n</li>\n<li>实现步骤：在原有<strong>模板、策略、工厂</strong>设计模式的基础上扩展——抽奖中过滤规则</li>\n</ul>\n<h2> 步骤</h2>\n<h3> 创建分支：</h3>\n<ul>\n<li>250215-txy-raffle-rule-center</li>\n</ul>\n<h3> 模板</h3>","y":"a","t":"Day06-抽奖规则过滤(中)","i":"laptop-code","I":0},[":md"]],
  ["v-309cf310","/notes/bigmarket/day07.html",{"d":1739577600000,"l":"2025年2月15日","c":["学习笔记","大营销"],"g":["抽奖策略","设计模式"],"e":"<h2> 概述</h2>\n<ol>\n<li>做了什么</li>\n</ol>\n<ul>\n<li>把之前实现的基于模板+策略+工厂的规则前过滤进行改造，改成责任链设计模式，因为规则前过滤各个部分有依赖关系且互斥（黑名单接管无需过滤权重），当前这部分逻辑写在代码中的，较臃肿，使用责任链模式更合适。</li>\n</ul>\n<ol start=\"2\">\n<li>整体的设计模式</li>\n</ol>\n<ul>\n<li>抽奖模板+抽奖前规则过滤（责任链）+抽奖中规则过滤（策略）+抽奖前过滤规则实现&amp;抽奖中过滤规则实现（工厂）</li>\n</ul>\n<ol start=\"3\">\n<li>设计模式通常组合使用：行为+创建，行为+创建+结构</li>\n</ol>","y":"a","t":"Day07-抽奖前置规则过滤改造-责任链设计模式","i":"laptop-code","I":0},[":md"]],
  ["v-3251cbaf","/notes/bigmarket/day08.html",{"d":1739577600000,"l":"2025年2月15日","c":["学习笔记","大营销"],"g":["抽奖策略","设计模式"],"e":"<h2> 概述</h2>\n<p>决策树思路：构造一个决策树（在单一职责的责任链不能满足需求且需要相对复杂的决策树形结构能表示出过滤规则逻辑时使用），\n每个节点即是不同的过滤规则，使用工厂模式管理并提供决策树节点，由决策引擎接口实现决策树形的遍历。</p>\n<h2> 实现</h2>\n<p>分支：250216-txy-rule-tree</p>\n<h3> 节点数据结构</h3>\n<ul>\n<li>RuleTreeVO: 树根信息</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RuleTreeVO</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token doc-comment comment\">/** 规则树ID */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> treeId<span class=\"token punctuation\">;</span>\n    <span class=\"token doc-comment comment\">/** 规则树名称 */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> treeName<span class=\"token punctuation\">;</span>\n    <span class=\"token doc-comment comment\">/** 规则树描述 */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> treeDesc<span class=\"token punctuation\">;</span>\n    <span class=\"token doc-comment comment\">/** 规则根节点 */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> treeRootRuleNode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/** 规则节点 */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RuleTreeNodeVO</span><span class=\"token punctuation\">&gt;</span></span> treeNodeMap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day08-抽奖中后规则过滤-决策树模型","i":"laptop-code","I":0},[":md"]],
  ["v-3406a44e","/notes/bigmarket/day09.html",{"d":1740096000000,"l":"2025年2月21日","c":["学习笔记","大营销"],"g":["抽奖策略","设计模式"],"e":"<p>分支：250221-txy-raffle-rule-flow\n快捷键：ctrl+option+o，去除没用的import</p>\n<h2> 概述</h2>\n<p>今天的内容是把前面的模板、责任链、规则树整合到一起，并且结合了数据库配置动态生成规则树模型。内容比较多和细碎，\n但是整体是串联起来了。</p>\n<h2> 整体流程</h2>\n<ul>\n<li>先装配抽奖规则，保存抽奖的最大数和对应随机数字-&gt;奖品的map\n<ul>\n<li>如果抽奖策略有权重配置，则按照配置的去装配抽奖规则</li>\n</ul>\n</li>\n<li>模板：模板整合抽奖流程\n<ul>\n<li>责任链：处理抽奖得到抽奖结果，若在黑名单或者权重，得到对应黑名单或权重配置的奖品</li>\n<li>规则树：得到奖品id后，看是否有奖品锁，如果有返回幸运奖；如果没有看库存，库存不够返回幸运奖</li>\n</ul>\n</li>\n</ul>","y":"a","t":"Day09-抽奖模板整合","i":"laptop-code","I":0},[":md"]],
  ["v-599141f8","/notes/bigmarket/day10.html",{"d":1740182400000,"l":"2025年2月22日","c":["学习笔记","大营销"],"g":["抽奖策略","设计模式","redis"],"e":"<p>分支：250222-txy-raffle-stock</p>\n<h3> 策略装配与调度实现</h3>\n<ul>\n<li>策略装配接口（IStrategyArmory）：\n<ul>\n<li>装配抽奖策略：抽奖策略的range &amp; 抽奖策略随机值与奖品映射map</li>\n<li awardid=\"\"><strong>装配奖品库存</strong>：缓存库存数据 strategy_award_count_key_#{strategyId}_#</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token doc-comment comment\">/** repository */</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">storeStrategyStock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> strategyId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> awardId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> awardCountSurplus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> cacheKey <span class=\"token operator\">=</span> <span class=\"token class-name\">Constants<span class=\"token punctuation\">.</span>RedisKey</span><span class=\"token punctuation\">.</span><span class=\"token constant\">STRATEGY_AWARD_COUNT_KEY</span> <span class=\"token operator\">+</span> strategyId <span class=\"token operator\">+</span> <span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNDERLINE</span> <span class=\"token operator\">+</span> awardId<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>redisService<span class=\"token punctuation\">.</span><span class=\"token function\">isExists</span><span class=\"token punctuation\">(</span>cacheKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    redisService<span class=\"token punctuation\">.</span><span class=\"token function\">setAtomicLong</span><span class=\"token punctuation\">(</span>cacheKey<span class=\"token punctuation\">,</span> awardCountSurplus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token doc-comment comment\">/** redisService */</span>\n<span class=\"token comment\">// 用setValue不能incr或者decr操作</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">getAtomicLong</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> cacheKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> redissonClient<span class=\"token punctuation\">.</span><span class=\"token function\">getAtomicLong</span><span class=\"token punctuation\">(</span>cacheKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAtomicLong</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> cacheKey<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> awardCountSurplus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    redissonClient<span class=\"token punctuation\">.</span><span class=\"token function\">getAtomicLong</span><span class=\"token punctuation\">(</span>cacheKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>awardCountSurplus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day10-抽奖策略之库存扣减","i":"laptop-code","I":0},[":md"]],
  ["v-5b461a97","/notes/bigmarket/day11.html",{"d":1740268800000,"l":"2025年2月23日","c":["学习笔记","大营销","前端"],"g":["React"],"e":"<p><a href=\"https://articles.zsxq.com/id_7ju9438pw3gl.html\" target=\"_blank\" rel=\"noopener noreferrer\">参考文章</a></p>\n<h2> 初始化</h2>\n<h3> 开发环境</h3>\n<ul>\n<li>node.js</li>\n<li>webstorm</li>\n<li>切换npm镜像源</li>\n<li>课程资料：\n<ul>\n<li>官网中文资料 https://zh-hans.react.dev/learn</li>\n<li>菜鸟教程 https://www.runoob.com/typescript/ts-tutorial.html</li>\n</ul>\n</li>\n</ul>","y":"a","t":"Day11-前端创建与后端http接口api","i":"laptop-code","I":0},[":md"]],
  ["v-5cfaf336","/notes/bigmarket/day12.html",{"d":1741996800000,"l":"2025年3月15日","c":["学习笔记","大营销","部署"],"g":["docker"],"e":"<h2> 前端</h2>\n<h3> 打包部署流程</h3>\n<ul>\n<li>前端工程目录下添加/修改以下3个文件\n<ul>\n<li>Dockerfile：镜像脚本，用于打包部署</li>\n<li>next.config.js：启动的</li>\n<li>build.sh：执行镜像脚本，用于构建镜像</li>\n</ul>\n</li>\n<li>修改.env.local修改路径地址：本地/远程服务器</li>\n<li>执行build.sh构建脚本：打包前端镜像\n<ul>\n<li>构建完成后：本地Docker Desktop可以看到构建的镜像</li>\n</ul>\n</li>\n</ul>\n<h3> 配置文件</h3>","y":"a","t":"Day12-抽奖部署","i":"laptop-code","I":0},[":md"]],
  ["v-5eafcbd5","/notes/bigmarket/day13.html",{"d":1743897600000,"l":"2025年4月6日","c":["学习笔记","大营销","数据库"],"g":["库表设计"],"e":"<ol>\n<li><strong>新增5张活动相关的表</strong>：</li>\n</ol>\n<ul>\n<li>raffle_activity：抽奖活动表</li>\n<li>raffle_activity_count：抽奖活动关联配置</li>\n<li>raffle_activity_account：用户抽奖活动</li>\n<li>raffle_activity_account_flow：用户流水</li>\n<li>raffle_activity_order: 用户订单</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p><strong>创建分支</strong></p>\n</li>\n<li>\n<p><strong>引入分库分表组件</strong>：db-router-spring-boot-starter</p>\n</li>\n</ol>","y":"a","t":"Day13-抽奖活动，分库分表路由组件","i":"laptop-code","I":0},[":md"]],
  ["v-6064a474","/notes/bigmarket/day14.html",{"d":1743984000000,"l":"2025年4月7日","c":["学习笔记","大营销","数据库"],"g":["库表设计"],"e":"<p>分支：250407-txy-activity-order-design</p>\n<p>将活动和库存解耦，作为商品属性绑定到商品上，后续不同模块例如支付/签到对应到不同的sku，当发生用户行为支付/签到时即对应给用户下一笔支付/签到的订单，且产生流水</p>\n<p>修改库表结构\n新增商品sku表，调整RaffleActivity表，和RaffleActivityCount解耦\n删除RaffleActivityAccountFlow表，调整RaffleActivityOrder表</p>\n<p>新增RaffleActivitySku的dao方法和xml配置：根据sku查询\n增加dao方法：RaffleActivityCountDao增加根据activityCountId查询RaffleActivityCount方法</p>","y":"a","t":"Day14-抽奖活动重构","i":"laptop-code","I":0},[":md"]],
  ["v-b0708c76","/tech/bigdata/",{"e":"<h2> bigdata</h2>\n<p>bigdata</p>\n","y":"a","t":"大数据"},["/tech/bigdata/README.md"]],
  ["v-34e41fba","/tech/cloudnative/",{"e":"<h2> cloudnative</h2>\n<p>云原生</p>\n","y":"a","t":"云原生"},["/tech/cloudnative/README.md"]],
  ["v-3571a5d8","/tech/database/",{"e":"<h2> database</h2>\n<p>数据库</p>\n","y":"a","t":"数据库"},["/tech/database/README.md"]],
  ["v-378b0cea","/tech/database/mysql.html",{"d":1676160000000,"l":"2023年2月12日","c":["MYSQL"],"g":["索引","事务","mysql日志","mysql锁"],"e":"<h1> 基础</h1>\n<figure><img src=\"https://cdn.nlark.com/yuque/0/2022/png/22839467/1667314175631-0ca0a803-49a4-4380-9fd9-96727c4aad59.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<h2> myisam和innodb</h2>\n<p>myisam：</p>\n<ol>\n<li>myisam不支持行锁，读取数据只能加表锁。写入时加排他锁。</li>\n<li>不支持事务。</li>\n<li>不支持外键。</li>\n<li>适合select密集型表。</li>\n</ol>","y":"a","t":"MYSQL","i":"laptop-code","I":0},[":md"]],
  ["v-0a121a22","/tech/database/redis1.html",{"d":1676160000000,"l":"2023年2月12日","c":["Redis"],"g":["数据类型","AOF&RDB","缓存一致性","redis实战"],"e":"<h1> ·为什么用redis</h1>\n<p><strong></strong></p>\n<p><strong></strong></p>\n<p><strong></strong></p>\n<p><strong></strong></p>\n<ol>\n<li>\n</li>\n<li>\n</li>\n<li>\n</li>\n<li>\n</li>\n<li>\n</li>\n</ol>\n<h1> ·数据结构</h1>\n<h2> </h2>\n<h3> </h3>\n<div class=\"language-c line-numbers-mode\" data-ext=\"c\"><pre class=\"language-c\"><code><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sdshdr</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录已使用的长度   </span>\n    <span class=\"token keyword\">int</span> free<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 记录空闲未使用的长度</span>\n    <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buf<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 字符数组</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Redis(上)","i":"laptop-code","I":0},[":md"]],
  ["v-06a868e4","/tech/database/redis2.html",{"d":1676160000000,"l":"2023年2月12日","c":["Redis"],"g":["数据类型","哨兵模式","redis集群"],"e":"<h1> 入门</h1>\n<p>nosql</p>\n<ol>\n<li>not only sql</li>\n<li>问题：\n<ol>\n<li>关系型数据库难以对付高并发</li>\n</ol>\n</li>\n<li>特点：\n<ol>\n<li>方便扩展</li>\n<li>大数据量、高性能</li>\n<li>数据类型多样</li>\n</ol>\n</li>\n<li>关系型\n<ol>\n<li>结构化</li>\n<li>SQL</li>\n<li>数据和关系单独的表中</li>\n<li>一致性</li>\n<li>事务</li>\n</ol>\n</li>\n<li>nosql\n<ol>\n<li>没有固定查询语句</li>\n<li>键值对、列存储、文档存储、图形数据库</li>\n<li>最终一致性</li>\n<li>CAP定理和BASE（异地多活）</li>\n<li>高性能、高可用、高扩展</li>\n</ol>\n</li>\n<li>分类\n<ol>\n<li>KV键值对：redis</li>\n<li>文档型数据库\n<ol>\n<li>mongodb（bson和json一样）\n<ol>\n<li>基于分布式文件存储</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>列存储数据库\n<ol>\n<li>HBase</li>\n<li>分布式文件系统</li>\n</ol>\n</li>\n<li>图关系数据库\n<ol>\n<li>放的是关系，比如朋友圈社交网络、广告推荐\n<ol>\n<li>neo4j、infogrid</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>","y":"a","t":"Redis(下)","i":"laptop-code","I":0},[":md"]],
  ["v-2479ac8e","/tech/database/redisUse.html",{"d":1740182400000,"l":"2025年2月22日","c":["redis"],"g":["redis"],"e":"<h2> key,value</h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    redissonClient<span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token function\">getBucket</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> redissonClient<span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token function\">getBucket</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"redis常见用法","i":"laptop-code","I":0},[":md"]],
  ["v-cc283046","/tech/middleware/",{"e":"<h2> 中间件</h2>\n<p>中间件</p>\n","y":"a","t":"中间件"},["/tech/middleware/README.md"]],
  ["v-0031294d","/tech/java/",{"e":"<h2> Java</h2>\n<p>爪哇</p>\n","y":"a","t":"Java"},["/tech/java/README.md"]],
  ["v-e2d6088c","/tech/java/javaBasic.html",{"d":1676160000000,"l":"2023年2月12日","c":["Java"],"g":["Java集合","序列化","反射","代理","设计模式"],"e":"<h1> ·java集合</h1>\n<h2> </h2>\n<p>一、HashSet：HashMap实现、无序</p>\n<p>实现：</p>\n<ol>\n<li>存的是散列值。</li>\n<li>按照元素的散列值来存取元素的。</li>\n<li>元素的散列值通过元素的hashCode方法计算得到。</li>\n<li>hashCode相等，则接着通过equals方法比较。</li>\n</ol>\n<p>特点：</p>\n<ol>\n<li>查找O(1)。</li>\n<li>无序。</li>\n<li>iterator遍历得到的结果是不确定的。</li>\n</ol>\n<p>二、TreeSet：二叉树实现</p>","y":"a","t":"Java基础","i":"laptop-code","I":0},[":md"]],
  ["v-aca788a4","/tech/java/juc.html",{"d":1676160000000,"l":"2023年2月12日","c":["JUC"],"g":["多线程","线程池","锁"],"e":"<h1> ·线程</h1>\n<h2> 1线程</h2>\n<h3> 线程生命周期</h3>\n<p>锁池和等待池</p>\n<p>Java中的对象有两个池，对对象加synchronized锁时必须获得对象锁，没有获得锁的线程进入锁池。获取到锁的线程如果调用了wait()方法就会进入等待池，进入等待池的线程不会竞争对象锁。</p>\n<p>状态：</p>\n<ol>\n<li>新建New：new新建一个线程，处于新建状态。为线程分配内存并初始化成员变量的值。</li>\n<li>就绪Runnable：可运行态。start启动一个线程，处于就绪状态。</li>\n<li>运行Running：获取CPU资源后，执行run方法进入运行状态。</li>\n<li>阻塞Blocked\n<ol>\n<li>同步阻塞：运行线程尝试获取同步锁没有获取到，JVM会把线程放入锁池。</li>\n<li>其他阻塞：运行线程执行sleep、I/O阻塞（等待用户输入），JVM会把线程转入阻塞状态。</li>\n</ol>\n</li>\n<li>waiting状态：\n<ol>\n<li>调用wait方法，进入waiting状态，会释放对象锁。被notify唤醒会变为runnable状态，被唤醒是从等待池进入锁池重新竞争锁，状态其实是blocked。获取到锁以后才是runnable。</li>\n<li>调用join方法，也会让调用join的线程从runnable变成waiting。</li>\n</ol>\n</li>\n<li>死亡Dead：处于运行状态的线程调用run方法或call方法执行完成后、调用stop方法停止线程、程序执行错误/异常退出，进入死亡状态。</li>\n</ol>","y":"a","t":"JUC","i":"laptop-code","I":0},[":md"]],
  ["v-20ba25b6","/tech/java/jvm.html",{"d":1676160000000,"l":"2023年2月12日","c":["JVM"],"g":["JVM","垃圾回收","Java内存模型","类加载机制","JVM调优"],"e":"<h1> ·JVM</h1>\n<h2> 运行机制</h2>\n<p>源文件-&gt;编译器-&gt;字节码-&gt;JVM-&gt;机器码</p>\n<ol>\n<li>Java源文件被编译器编译成字节码文件。</li>\n<li>JVM的即时编译器将字节码文件编译成相应操作系统的机器码。【解释器不同虚拟机相同】</li>\n<li>机器码是靠调用相应操作系统的本地方法库执行相应的方法。</li>\n<li>一个进程对应一个java虚拟机实例。</li>\n</ol>\n<h2> JVM包括什么？</h2>\n<p>包括类加载器，运行时数据区，执行引擎和本地接口库。</p>\n<ol>\n<li>类加载器：用于将字节码文件加载到JVM中。</li>\n<li>运行时数据区：用于存储JVM运行过程中产生的数据。</li>\n<li>执行引擎：\n<ol>\n<li>包括即时编译器JIT-&gt;将字节码编译成具体的机器码。</li>\n<li>垃圾回收器：回收在运行过程中不再使用的对象。</li>\n</ol>\n</li>\n<li>本地接口库JNI：调用本地方法库与操作系统交互。</li>\n</ol>","y":"a","t":"JVM","i":"laptop-code","I":0},[":md"]],
  ["v-343f179c","/tech/java/logframework.html",{"d":1738368000000,"l":"2025年2月1日","c":["开发笔记","学习记录"],"g":["log"],"e":"<h1> 日志框架结构：</h1>\n<p>slf4j是日志门面api，提供了一种标准化的日志接口，log4j、log4j2、logback是真正的日志实现库。slf4j允许用户在不改变代码的情况下，随时更换底层日志框架。</p>\n<h2> 各个库单独使用</h2>\n<ul>\n<li><strong>log4j</strong></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>log4j<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>log4j<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">1.2</span><span class=\"token number\">.17</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"日志框架","i":"laptop-code","I":0},[":md"]],
  ["v-3354c374","/notes/ragmcp/",{"e":"<h1> rag&amp;mcp</h1>\n<h2> IAiService</h2>\n<ul>\n<li>非流式问答接口\n<ul>\n<li>可根据模型和问题返回答案</li>\n</ul>\n</li>\n<li>流式问答\n<ul>\n<li>根据模型和问题返回答案</li>\n</ul>\n</li>\n<li>rag流式问答\n<ul>\n<li>根据模型和问题以及rag知识库返回答案</li>\n</ul>\n</li>\n</ul>\n<h2> IRAGService</h2>\n<ul>\n<li>查询全部知识库</li>\n<li>上传知识库</li>\n<li>获取git仓库文件并上传知识库</li>\n</ul>\n","y":"a","t":"rag&mcp"},["/notes/ragmcp/README.md"]],
  ["v-db0171bc","/notes/ragmcp/day01.html",{"d":1744502400000,"l":"2025年4月13日","c":["学习笔记","ai"],"g":["deepseek","ollama"],"e":"<ol>\n<li>创建项目</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>ai-rag-knowledge\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><ol start=\"2\">\n<li>添加模块</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>txy-dev-tech-api\ntxy-dev-tech-app\ntxy-dev-tech-trigger\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day01-部署ollama环境","i":"laptop-code","I":0},[":md"]],
  ["v-d797c07e","/notes/ragmcp/day02.html",{"d":1744588800000,"l":"2025年4月14日","c":["学习笔记","ai"],"g":["deepseek","ollama"],"e":"<h2> 分支：3-stream-api</h2>\n<h2> 实现步骤</h2>\n<h3> 创建启动类和配置文件</h3>\n<h3> 创建redis配置类</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@EnableConfigurationProperties</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisClientConfigProperties</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisClientConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redissonClient\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RedissonClient</span> <span class=\"token function\">redissonClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableApplicationContext</span> applicationContext<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RedisClientConfigProperties</span> properties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Config</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 根据需要可以设定编解码器；https://github.com/redisson/redisson/wiki/4.-%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96</span>\n        config<span class=\"token punctuation\">.</span><span class=\"token function\">setCodec</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonJacksonCodec</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INSTANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        config<span class=\"token punctuation\">.</span><span class=\"token function\">useSingleServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis://\"</span> <span class=\"token operator\">+</span> properties<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">+</span> properties<span class=\"token punctuation\">.</span><span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//                .setPassword(properties.getPassword())</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setConnectionPoolSize</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getPoolSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setConnectionMinimumIdleSize</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getMinIdleSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setIdleConnectionTimeout</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getIdleTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setConnectTimeout</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getConnectTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setRetryAttempts</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getRetryAttempts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setRetryInterval</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getRetryInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setPingConnectionInterval</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">getPingInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setKeepAlive</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">isKeepAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Redisson</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day02-调用ollama deepseek流式应答接口","i":"laptop-code","I":0},[":md"]],
  ["v-d42e0f40","/notes/ragmcp/day03.html",{"d":1746057600000,"l":"2025年5月1日","c":["学习笔记","ai"],"g":["deepseek","ollama"],"e":"<h2> 分支：4-stream-ui</h2>\n<h2> 整理话术并提问ai</h2>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>请根据以下信息，编写UI对接服务端接口；\n\n流式GET请求接口，由 SpringBoot Spring AI 框架实现，如下；\n\n/**\n * curl http://localhost:8090/api/v1/ollama/generate_stream?model=deepseek-r1:1.5b&amp;message=1+1\n */\n@RequestMapping(value = \"generate_stream\", method = RequestMethod.GET)\n@Override\npublic Flux&lt;ChatResponse&gt; generateStream(@RequestParam String model, @RequestParam String message) {\n    return chatClient.stream(new Prompt(\n            message,\n            OllamaOptions.create()\n                    .withModel(model)\n    ));\n}\n\n流式GET应答数据，数组中的一条对象；\n\n[\n    {\n        \"result\": {\n            \"output\": {\n            \"messageType\": \"ASSISTANT\",\n            \"properties\": {\n                \"id\": \"chatcmpl-B3HPw95SsqmhoWeJ8azGLxK1Vf4At\",\n                \"role\": \"ASSISTANT\",\n                \"finishReason\": \"\"\n            },\n            \"content\": \"1\",\n            \"media\": []\n            },\n            \"metadata\": {\n                \"finishReason\": null,\n                \"contentFilterMetadata\": null\n                }\n        }\n    }\n]\n\n如描述说明，帮我编写一款简单的AI对话页面。\n\n1. 输入内容，点击发送按钮，调用服务端流式请求接口，前端渲染展示。\n2. 以html、js代码方式实现，css样式使用 tailwind 编写。\n3. 通过 const eventSource = new EventSource(apiUrl); 调用api接口。    \n4. 从 result.output.content 获取，应答的文本展示。注意 content 可能为空。\n5. 从 result.metadata.finishReason = STOP 获取，结束标识。\n6. 注意整体样式的简洁美观。\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day03-对接流式应答接口前端页面","i":"laptop-code","I":0},[":md"]],
  ["v-d0c45e02","/notes/ragmcp/day04.html",{"d":1746057600000,"l":"2025年5月1日","c":["学习笔记","ai"],"g":["deepseek","rag"],"e":"<h2> 分支：5-rag</h2>\n<h2> pom：</h2>\n<p>app模块打开几个ai相关的依赖，分别是rag知识库文档相关的以及存储到pgsql向量库</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-ai-tika-document-reader&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.ai&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-ai-pgvector-store-spring-boot-starter&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day04-上传rag知识库","i":"laptop-code","I":0},[":md"]],
  ["v-cd5aacc4","/notes/ragmcp/day05.html",{"d":1746057600000,"l":"2025年5月1日","c":["学习笔记","ai"],"g":["deepseek","rag"],"e":"<h2> 分支：rag</h2>\n<h2> api层新建接口: IRAGService</h2>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRAGService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 查询知识库</span>\n    <span class=\"token class-name\">Response</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">queryRagTagList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 上传知识库</span>\n    <span class=\"token class-name\">Response</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> ragTag<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MultipartFile</span><span class=\"token punctuation\">&gt;</span></span> files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day05-包装知识库接口","i":"laptop-code","I":0},[":md"]],
  ["v-c9f0fb86","/notes/ragmcp/day06.html",{"d":1746057600000,"l":"2025年5月1日","c":["学习笔记","ai"],"g":["deepseek","rag"],"e":"<p>分支：6-stream-rag-ui</p>\n<h2> 常用网站</h2>\n<ul>\n<li>\n<p>https://www.deepseek.com/</p>\n</li>\n<li>\n<p>https://v0.dev/</p>\n</li>\n<li>\n<p>https://chatglm.cn/</p>\n</li>\n<li>\n<p>https://openai.itedus.cn/</p>\n</li>\n</ul>\n<h2> ai生成前端代码话术</h2>\n<h3> 生成对话页面</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>根据如描述说明，帮我编写一款简单的AI对话页面。\n        1. 请编写html、js、tailwindcss UI 效果。不要写react、vue。\n        2. 点击新建聊天，会创建一个新的加入左侧的聊天列表\n        3. 聊天列表可以点击展开选择。\n        4. 选择的聊天，在对话列表中，可以点击删除或者重命名。\n        5. 输入内容，点击发送按钮和使用快捷键，调用服务端流式请求接口，前端渲染展示。\n        6. 以html、js代码方式实现，css样式使用 tailwind 编写。\n        7. 通过 const eventSource = new EventSource(apiUrl); 调用api接口。\n        8. 从 result.output.content 获取，应答的文本展示。注意 content 可能为空。\n        9. 从 result.metadata.finishReason = STOP 获取，结束标识。\n        10. 注意整体样式的简洁美观。\n\n        接口信息如下\n\n        流式GET请求接口，由 SpringBoot Spring AI 框架实现，如下；\n\n/**\n * curl http://localhost:8090/api/v1/ollama/generate_stream?model=deepseek-r1:1.5b&amp;message=1+1\n */\n@RequestMapping(value = \"generate_stream\", method = RequestMethod.GET)\n@Override\npublic Flux&lt;ChatResponse&gt; generateStream(@RequestParam String model, @RequestParam String message) {\n        return chatClient.stream(new Prompt(\n        message,\n        OllamaOptions.create()\n        .withModel(model)\n        ));\n        }\n\n        流式GET应答数据，数组中的一条对象；\n\n        [\n        {\n        \"result\": {\n        \"output\": {\n        \"messageType\": \"ASSISTANT\",\n        \"properties\": {\n        \"id\": \"chatcmpl-B3HPw95SsqmhoWeJ8azGLxK1Vf4At\",\n        \"role\": \"ASSISTANT\",\n        \"finishReason\": \"\"\n        },\n        \"content\": \"1\",\n        \"media\": []\n        },\n        \"metadata\": {\n        \"finishReason\": null,\n        \"contentFilterMetadata\": null\n        }\n        }\n        }\n        ]\n\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day06-rag上传对接前端页面","i":"laptop-code","I":0},[":md"]],
  ["v-c6874a48","/notes/ragmcp/day07.html",{"d":1746057600000,"l":"2025年5月1日","c":["学习笔记","ai"],"g":["deepseek","rag"],"e":"<h2> 分支：8-rag-git</h2>\n<h2> 添加pom依赖</h2>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.eclipse.jgit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>org.eclipse.jgit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day07-git仓库代码上传知识库","i":"laptop-code","I":0},[":md"]],
  ["v-c31d990a","/notes/ragmcp/day08.html",{"d":1746057600000,"l":"2025年5月1日","c":["学习笔记","ai"],"g":["deepseek","rag"],"e":"<p>之前是对接的ollama我们自己部署的模型，现在要扩展对接openai的模型</p>\n<h2> 配置增加openai的模型</h2>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><pre class=\"language-yaml\"><code><span class=\"token key atrule\">ai</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">ollama</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">base-url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//xxx<span class=\"token punctuation\">:</span><span class=\"token number\">11434</span>\n  <span class=\"token key atrule\">embedding</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">num-batch</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\n    <span class=\"token key atrule\">model</span><span class=\"token punctuation\">:</span> nomic<span class=\"token punctuation\">-</span>embed<span class=\"token punctuation\">-</span>text\n<span class=\"token key atrule\">openai</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">base-url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//pro<span class=\"token punctuation\">-</span>share<span class=\"token punctuation\">-</span>aws<span class=\"token punctuation\">-</span>api.zcyai.com/\n  <span class=\"token key atrule\">api-key</span><span class=\"token punctuation\">:</span> sk<span class=\"token punctuation\">-</span>eEyfxptPgbfXd3Z164260740E0494161Bd8<span class=\"token important\">**找小傅哥申请</span>\n  <span class=\"token key atrule\">embedding-model</span><span class=\"token punctuation\">:</span> text<span class=\"token punctuation\">-</span>embedding<span class=\"token punctuation\">-</span>ada<span class=\"token punctuation\">-</span><span class=\"token number\">002</span>\n<span class=\"token key atrule\">rag</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">embed</span><span class=\"token punctuation\">:</span> nomic<span class=\"token punctuation\">-</span>embed<span class=\"token punctuation\">-</span>text <span class=\"token comment\">#nomic-embed-text、text-embedding-ada-002</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day08-扩展对接openai","i":"laptop-code","I":0},[":md"]],
  ["v-bfb3e7cc","/notes/ragmcp/day09.html",{"d":1746144000000,"l":"2025年5月2日","c":["学习笔记","ai"],"g":["deepseek","rag"],"e":"<h2> 分支 10-tag-v1</h2>\n<p>本地代码-&gt;打包构建镜像-&gt;上传docker-hub-&gt;云服务器执行环境安装(redis/ollama/pgvector)-&gt;云服务器执行软件安装(上传docker-hub的打包镜像)</p>\n<h2> 部署</h2>\n<h3> 1. 部署脚本文件夹配置检查</h3>\n<p>dev-ops/tag/v1.0目录</p>\n<h4> api</h4>\n<p>测试脚本</p>\n<ul>\n<li>curl.json</li>\n<li>curl.sh</li>\n</ul>\n<h4> maven</h4>\n<p>maven配置</p>","y":"a","t":"Day09-部署上线","i":"laptop-code","I":0},[":md"]],
  ["v-749eac78","/notes/ragmcp/day10.html",{"d":1746144000000,"l":"2025年5月2日","c":["学习笔记","ai"],"g":["deepseek","rag","向量库"],"e":"<h2> mcp客户端</h2>\n<p>代码仓库：ai-mcp-knowledge</p>\n<h3> 引入pom</h3>\n<p>客户端和服务端</p>\n<div class=\"language-xml line-numbers-mode\" data-ext=\"xml\"><pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.ai<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-ai-mcp-server-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.ai<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-ai-mcp-client-webflux-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Day10-mcp开发及部署上线","i":"laptop-code","I":0},[":md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},[]],
  ["v-e8b6c472","/notes/",{"y":"p","t":"Notes"},[]],
  ["v-0f67fa7e","/tech/basic/",{"y":"p","t":"Basic"},[]],
  ["v-369f9303","/notes/chatgpt/",{"y":"p","t":"Chatgpt"},[]],
  ["v-c04db10c","/notes/bigmarket/",{"y":"p","t":"Bigmarket"},[]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},[]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},[]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},[]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},[]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},[]],
  ["v-60649a06","/category/%E9%9A%8F%E7%AC%94/",{"y":"p","t":"随笔 分类","I":0},["/category/随笔/"]],
  ["v-4fa2410a","/tag/%E8%AE%A4%E7%9F%A5/",{"y":"p","t":"标签: 认知","I":0},["/tag/认知/"]],
  ["v-a80515c6","/category/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/",{"y":"p","t":"自我介绍 分类","I":0},["/category/自我介绍/"]],
  ["v-6c40ee0e","/tag/%E5%B7%A5%E4%BD%9C/",{"y":"p","t":"标签: 工作","I":0},["/tag/工作/"]],
  ["v-b6898762","/category/%E4%B8%93%E4%B8%9A%E6%8A%80%E8%83%BD/",{"y":"p","t":"专业技能 分类","I":0},["/category/专业技能/"]],
  ["v-089cebd6","/tag/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/",{"y":"p","t":"标签: 新年快乐","I":0},["/tag/新年快乐/"]],
  ["v-793ef1c6","/category/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/",{"y":"p","t":"项目经验 分类","I":0},["/category/项目经验/"]],
  ["v-f64eddd4","/tag/%E6%95%B0%E7%BB%84/",{"y":"p","t":"标签: 数组","I":0},["/tag/数组/"]],
  ["v-5fb2089c","/category/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/",{"y":"p","t":"开发笔记 分类","I":0},["/category/开发笔记/"]],
  ["v-28859f53","/tag/hash/",{"y":"p","t":"标签: hash","I":0},[]],
  ["v-375cc205","/category/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",{"y":"p","t":"学习记录 分类","I":0},["/category/学习记录/"]],
  ["v-4f1a28a4","/tag/%E9%93%BE%E8%A1%A8/",{"y":"p","t":"标签: 链表","I":0},["/tag/链表/"]],
  ["v-4f178b9c","/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{"y":"p","t":"数据结构 分类","I":0},["/category/数据结构/"]],
  ["v-ddf33f48","/tag/%E5%AD%97%E5%85%B8%E6%A0%91/",{"y":"p","t":"标签: 字典树","I":0},["/tag/字典树/"]],
  ["v-227ecbd6","/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{"y":"p","t":"计算机网络 分类","I":0},["/category/计算机网络/"]],
  ["v-b50ce0e6","/tag/osi%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/",{"y":"p","t":"标签: OSI七层模型","I":0},["/tag/osi七层模型/"]],
  ["v-79574331","/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",{"y":"p","t":"计算机基础 分类","I":0},["/category/计算机基础/"]],
  ["v-06795f96","/tag/tcpip/",{"y":"p","t":"标签: TCP/IP","I":0},[]],
  ["v-4c40caa5","/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{"y":"p","t":"操作系统 分类","I":0},["/category/操作系统/"]],
  ["v-8a66e00c","/tag/httphttps/",{"y":"p","t":"标签: HTTP/HTTPS","I":0},[]],
  ["v-67483220","/category/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{"y":"p","t":"学习笔记 分类","I":0},["/category/学习笔记/"]],
  ["v-1190a5ee","/tag/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{"y":"p","t":"标签: 内存管理","I":0},["/tag/内存管理/"]],
  ["v-919d6758","/category/chatgpt/",{"y":"p","t":"chatgpt 分类","I":0},[]],
  ["v-02a467de","/tag/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/",{"y":"p","t":"标签: 进程与线程","I":0},["/tag/进程与线程/"]],
  ["v-5c3a2524","/category/%E5%A4%A7%E8%90%A5%E9%94%80/",{"y":"p","t":"大营销 分类","I":0},["/category/大营销/"]],
  ["v-19ed4ed7","/tag/io%E6%A8%A1%E5%9E%8B/",{"y":"p","t":"标签: IO模型","I":0},["/tag/io模型/"]],
  ["v-e9c7e408","/category/%E5%89%8D%E7%AB%AF/",{"y":"p","t":"前端 分类","I":0},["/category/前端/"]],
  ["v-b3144256","/tag/cpu/",{"y":"p","t":"标签: CPU","I":0},[]],
  ["v-622f76f2","/category/%E9%83%A8%E7%BD%B2/",{"y":"p","t":"部署 分类","I":0},["/category/部署/"]],
  ["v-991a6cee","/tag/%E9%9B%B6%E6%8B%B7%E8%B4%9D/",{"y":"p","t":"标签: 零拷贝","I":0},["/tag/零拷贝/"]],
  ["v-5e0b61bd","/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{"y":"p","t":"数据库 分类","I":0},["/category/数据库/"]],
  ["v-684c427a","/tag/dev-ops/",{"y":"p","t":"标签: dev-ops","I":0},[]],
  ["v-9717cc36","/category/mysql/",{"y":"p","t":"MYSQL 分类","I":0},[]],
  ["v-1a8900ba","/tag/nginx/",{"y":"p","t":"标签: nginx","I":0},[]],
  ["v-8848dfa8","/category/redis/",{"y":"p","t":"Redis 分类","I":0},[]],
  ["v-6106c001","/tag/docker/",{"y":"p","t":"标签: docker","I":0},[]],
  ["v-25365ef3","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",{"y":"p","t":"标签: 数据库","I":0},["/tag/数据库/"]],
  ["v-5831b135","/category/java/",{"y":"p","t":"Java 分类","I":0},[]],
  ["v-4bb7bbf4","/tag/%E6%8A%BD%E5%A5%96%E7%AD%96%E7%95%A5/",{"y":"p","t":"标签: 抽奖策略","I":0},["/tag/抽奖策略/"]],
  ["v-65f15ecf","/category/juc/",{"y":"p","t":"JUC 分类","I":0},[]],
  ["v-0d1f4c3c","/tag/redis/",{"y":"p","t":"标签: redis","I":0},[]],
  ["v-65f163c6","/category/jvm/",{"y":"p","t":"JVM 分类","I":0},[]],
  ["v-05b88e01","/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{"y":"p","t":"标签: 设计模式","I":0},["/tag/设计模式/"]],
  ["v-3d1829ef","/category/ai/",{"y":"p","t":"ai 分类","I":0},[]],
  ["v-0d223344","/tag/react/",{"y":"p","t":"标签: React","I":0},[]],
  ["v-79593236","/tag/%E5%BA%93%E8%A1%A8%E8%AE%BE%E8%AE%A1/",{"y":"p","t":"标签: 库表设计","I":0},["/tag/库表设计/"]],
  ["v-6ebee387","/tag/%E7%B4%A2%E5%BC%95/",{"y":"p","t":"标签: 索引","I":0},["/tag/索引/"]],
  ["v-26374ab8","/tag/%E4%BA%8B%E5%8A%A1/",{"y":"p","t":"标签: 事务","I":0},["/tag/事务/"]],
  ["v-54d85698","/tag/mysql%E6%97%A5%E5%BF%97/",{"y":"p","t":"标签: mysql日志","I":0},["/tag/mysql日志/"]],
  ["v-74edb48c","/tag/mysql%E9%94%81/",{"y":"p","t":"标签: mysql锁","I":0},["/tag/mysql锁/"]],
  ["v-aafe73e0","/tag/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",{"y":"p","t":"标签: 数据类型","I":0},["/tag/数据类型/"]],
  ["v-e6ae3818","/tag/aof_rdb/",{"y":"p","t":"标签: AOF&RDB","I":0},[]],
  ["v-34e38882","/tag/%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/",{"y":"p","t":"标签: 缓存一致性","I":0},["/tag/缓存一致性/"]],
  ["v-7a295aac","/tag/redis%E5%AE%9E%E6%88%98/",{"y":"p","t":"标签: redis实战","I":0},["/tag/redis实战/"]],
  ["v-5bbd6695","/tag/%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F/",{"y":"p","t":"标签: 哨兵模式","I":0},["/tag/哨兵模式/"]],
  ["v-49aeef49","/tag/redis%E9%9B%86%E7%BE%A4/",{"y":"p","t":"标签: redis集群","I":0},["/tag/redis集群/"]],
  ["v-12e56aa2","/tag/java%E9%9B%86%E5%90%88/",{"y":"p","t":"标签: Java集合","I":0},["/tag/java集合/"]],
  ["v-eccae7f6","/tag/%E5%BA%8F%E5%88%97%E5%8C%96/",{"y":"p","t":"标签: 序列化","I":0},["/tag/序列化/"]],
  ["v-5e3b2cf1","/tag/%E5%8F%8D%E5%B0%84/",{"y":"p","t":"标签: 反射","I":0},["/tag/反射/"]],
  ["v-2b21fce9","/tag/%E4%BB%A3%E7%90%86/",{"y":"p","t":"标签: 代理","I":0},["/tag/代理/"]],
  ["v-415e2fc5","/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{"y":"p","t":"标签: 多线程","I":0},["/tag/多线程/"]],
  ["v-a9313856","/tag/%E7%BA%BF%E7%A8%8B%E6%B1%A0/",{"y":"p","t":"标签: 线程池","I":0},["/tag/线程池/"]],
  ["v-62671174","/tag/%E9%94%81/",{"y":"p","t":"标签: 锁","I":0},["/tag/锁/"]],
  ["v-b30dba08","/tag/jvm/",{"y":"p","t":"标签: JVM","I":0},[]],
  ["v-0e7d8a20","/tag/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/",{"y":"p","t":"标签: 垃圾回收","I":0},["/tag/垃圾回收/"]],
  ["v-7f15fd44","/tag/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/",{"y":"p","t":"标签: Java内存模型","I":0},["/tag/java内存模型/"]],
  ["v-0c5b8bda","/tag/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/",{"y":"p","t":"标签: 类加载机制","I":0},["/tag/类加载机制/"]],
  ["v-6ecc2b8f","/tag/jvm%E8%B0%83%E4%BC%98/",{"y":"p","t":"标签: JVM调优","I":0},["/tag/jvm调优/"]],
  ["v-b30c1e8e","/tag/log/",{"y":"p","t":"标签: log","I":0},[]],
  ["v-c2c02686","/tag/deepseek/",{"y":"p","t":"标签: deepseek","I":0},[]],
  ["v-bb71b48a","/tag/ollama/",{"y":"p","t":"标签: ollama","I":0},[]],
  ["v-b3071336","/tag/rag/",{"y":"p","t":"标签: rag","I":0},[]],
  ["v-1ff2fc82","/tag/%E5%90%91%E9%87%8F%E5%BA%93/",{"y":"p","t":"标签: 向量库","I":0},["/tag/向量库/"]],
  ["v-237f52b6","/tech/cloudnative/docker.html",{"y":"a","t":"docker部署","i":"laptop-code","I":0},[":md"]],
  ["v-1c3beb18","/tech/ai/aitech.html",{"y":"a","t":""},[":md"]],
]
